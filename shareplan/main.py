# -*- coding: utf-8 -*-
"""SMP.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LCfSVlFr7WWTp0a0awkRo8mMDF24jm0q

# Simulation 
### Share Match Plan
calcul du gain genere par le Share Match Plan pendant 2 ans
"""

# Inputs

from random import randrange
import numpy as np
import matplotlib.pyplot as plt
montantParMois = 200
nbMois = 24

#####################
#    Functions      #
#####################


def getY(x):
    y = []
    entryValue = 37
    randRg = 15
    xOffset1 = 8
    xOffset2 = 16
    xOffset3 = 24
    yMultip1 = 0.8
    yMultip2 = 0.5
    yMultip3 = 0.4
    yMultip4 = 0.5
    for i in range(len(x)):
        if(x[i] < xOffset1):
            y.append(entryValue*yMultip1*(1+randrange(-randRg, randRg)*0.01))
        elif(xOffset1 <= x[i] and x[i] < xOffset2):
            y.append(entryValue*yMultip2*(1+randrange(-randRg, randRg)*0.01))
        elif(xOffset2 <= x[i] and x[i] < xOffset3):
            y.append(entryValue*yMultip3*(1+randrange(-randRg, randRg)*0.01))
        else:
            y.append(entryValue*yMultip4*(1+randrange(-randRg, randRg)*0.01))
    return y


def calculateStock(y, entrySum):
    stock = 0
    nbOfActions = 0
    for elem in y:
        prime = entrySum/(elem*2)
        nbOfActions += entrySum/elem + prime
    stock = nbOfActions*y[-1]
    return stock


def printTable(y, entrySum):
    stock = 0
    nbOfActions = 0
    mois = 0
    evoStock = 0
    print("| Mois \t | ACBought \t\t | ACPrime \t\t | Stock A \t\t | Stock E \t\t |")
    for elem in y:
        prime = entrySum/(elem*2)
        real = entrySum/elem
        nbOfActions += real + prime
        evoStock = nbOfActions*elem
        print("| "+str(mois)+" \t | "+str(real)+" \t | " + str(prime) +
              " \t | "+str(nbOfActions)+" \t |"+str(evoStock)+" \t |")
        mois += 1
    stock = nbOfActions*y[-1]
    return stock


#####################
#  prepare vectors  #
#####################
x = np.linspace(1, nbMois, nbMois)
y = getY(x)
stock = calculateStock(y, montantParMois)

"""# Cours d'actions AMS
La fonction d'evolution du cours d'action d'amadeus pendant les 2 prochaines annees par mois :
"""

#####################
#       Plot        #
#####################
#plt.plot(x, y)
# plt.show()

printTable(y, montantParMois)

"""Gain genere :"""

print("Montant investit : "+str(montantParMois*24))
print("Gains net : "+str(stock-montantParMois*24))
print("Total apres "+str(nbMois/12)+" ans :"+str(stock))
